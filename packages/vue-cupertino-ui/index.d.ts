/*
 * Generated by TSDL, don't edit this file directly.
 */
// Based on the Vue 3 documentation for defining custom elements:
// https://vuejs.org/guide/extras/web-components
import { EmitFn, PublicProps, HTMLAttributes } from 'vue';
type EventMap = {
  [event: string]: Event
}
// This maps an EventMap to the format that Vue's $emit type expects.
type VueEmit<T extends EventMap> = EmitFn<{
  [K in keyof T]: (event: T[K]) => void
}>
// Vue 3 event listener properties for template usage
type VueEventListeners<T extends EventMap> = {
  [K in keyof T as `on${Capitalize<string & K>}`]?: (event: T[K]) => any
}
type DefineCustomElement<
  ElementType,
  Events extends EventMap = {},
  SelectedAttributes extends keyof ElementType = keyof ElementType
> = new () => ElementType & VueEventListeners<Events> & {
  // Use $props to define the properties exposed to template type checking. Vue
  // specifically reads prop definitions from the `$props` type. Note that we
  // combine the element's props with the global HTML props and Vue's special
  // props.
  /** @deprecated Do not use the $props property on a Custom Element ref,
    this is for template prop types only. */
  $props: Partial<Pick<ElementType, SelectedAttributes>> & PublicProps & VueEventListeners<Events>
  // Use $emit to specifically define event types. Vue specifically reads event
  // types from the `$emit` type. Note that `$emit` expects a particular format
  // that we map `Events` to.
  /** @deprecated Do not use the $emit property on a Custom Element ref,
    this is for template prop types only. */
  $emit: VueEmit<Events>
}
export type FlutterCupertinoToastProps = {
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoToastElement {
}
export type FlutterCupertinoToastEvents = {
}
export type FlutterCupertinoTimerPickerProps = {
  'mode'?: string;
  'initial-timer-duration'?: number;
  'minute-interval'?: number;
  'second-interval'?: number;
  'background-color'?: string;
  'height'?: number;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoTimerPickerElement {
  mode?: string;
  initialTimerDuration?: number;
  minuteInterval?: number;
  secondInterval?: number;
  backgroundColor?: string;
  height?: number;
}
export type FlutterCupertinoTimerPickerEvents = {
  change?: CustomEvent<number>;
}
export type FlutterCupertinoTextareaProps = {
  'val'?: string;
  'placeholder'?: string;
  'disabled'?: boolean;
  'readonly'?: boolean;
  'max-length'?: number;
  'rows'?: number;
  'show-count'?: boolean;
  'auto-size'?: boolean;
  'transparent'?: boolean;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoTextareaElement {
  val?: string;
  placeholder?: string;
  disabled?: boolean;
  readonly?: boolean;
  maxLength?: number;
  rows?: number;
  showCount?: boolean;
  autoSize?: boolean;
  transparent?: boolean;
}
export type FlutterCupertinoTextareaEvents = {
  input?: CustomEvent<string>;
  complete?: Event;
}
export type FlutterCupertinoTabBarProps = {
  'current-index'?: string;
  'background-color'?: string;
  'active-color'?: string;
  'inactive-color'?: string;
  'icon-size'?: string;
  'height'?: string;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoTabBarElement {
  currentIndex?: string;
  backgroundColor?: string;
  activeColor?: string;
  inactiveColor?: string;
  iconSize?: string;
  height?: string;
}
export type FlutterCupertinoTabBarEvents = {
  tabchange?: CustomEvent<number>;
}
export type FlutterCupertinoTabProps = {
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoTabElement {
  switchTab(index: number): void;
}
export type FlutterCupertinoTabEvents = {
  change?: CustomEvent<number>;
}
export type FlutterCupertinoSwitchProps = {
  'checked'?: boolean;
  'disabled'?: boolean;
  'active-color'?: string;
  'inactive-color'?: string;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoSwitchElement {
  checked?: boolean;
  disabled?: boolean;
  activeColor?: string;
  inactiveColor?: string;
}
export type FlutterCupertinoSwitchEvents = {
  change?: CustomEvent<boolean>;
}
export type FlutterCupertinoSliderProps = {
  'val'?: number;
  'min'?: number;
  'max'?: number;
  'step'?: number;
  'disabled'?: boolean;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoSliderElement {
  val?: number;
  min?: number;
  max?: number;
  step?: number;
  disabled?: boolean;
}
export type FlutterCupertinoSliderEvents = {
  change?: CustomEvent<number>;
  changestart?: CustomEvent<number>;
  changeend?: CustomEvent<number>;
}
export type FlutterCupertinoSegmentedTabProps = {
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoSegmentedTabElement {
}
export type FlutterCupertinoSegmentedTabEvents = {
  change?: CustomEvent<number>;
}
export type FlutterCupertinoSearchInputProps = {
  'val'?: string;
  'placeholder'?: string;
  'disabled'?: boolean;
  'type'?: string;
  'prefix-icon'?: string;
  'suffix-icon'?: string;
  'suffix-model'?: string;
  'item-color'?: string;
  'item-size'?: number;
  'autofocus': boolean;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoSearchInputElement {
  val?: string;
  placeholder?: string;
  disabled?: boolean;
  type?: string;
  prefixIcon?: string;
  suffixIcon?: string;
  suffixModel?: string;
  itemColor?: string;
  itemSize?: number;
  autofocus: boolean;
}
export type FlutterCupertinoSearchInputEvents = {
  input?: CustomEvent<string>;
  search?: CustomEvent<string>;
  clear?: CustomEvent;
}
export type FlutterCupertinoRadioProps = {
  'val'?: string;
  'group-value'?: string;
  'use-checkmark-style'?: boolean;
  'disabled'?: boolean;
  'active-color'?: string;
  'focus-color'?: string;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoRadioElement {
  val?: string;
  groupValue?: string;
  useCheckmarkStyle?: boolean;
  disabled?: boolean;
  activeColor?: string;
  focusColor?: string;
}
export type FlutterCupertinoRadioEvents = {
  change?: CustomEvent<string>;
}
export type FlutterCupertinoPickerProps = {
  'height'?: number;
  'item-height'?: number;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoPickerElement {
  height?: number;
  itemHeight?: number;
}
export type FlutterCupertinoPickerEvents = {
  change?: CustomEvent<string>;
}
export type FlutterCupertinoPickerItemProps = {
  'label'?: string;
  'val'?: string;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoPickerItemElement {
  label?: string;
  val?: string;
}
export type FlutterCupertinoPickerItemEvents = {
}
export type FlutterCupertinoModalPopupProps = {
  'visible'?: boolean;
  'height'?: number;
  'surface-painted'?: boolean;
  'mask-closable'?: boolean;
  'background-opacity'?: number;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoModalPopupElement {
  visible?: boolean;
  height?: number;
  surfacePainted?: boolean;
  maskClosable?: boolean;
  backgroundOpacity?: number;
}
export type FlutterCupertinoModalPopupEvents = {
  close?: CustomEvent;
}
export type FlutterCupertinoLoadingProps = {
  'mask-closable'?: boolean;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoLoadingElement {
  maskClosable?: boolean;
}
export type FlutterCupertinoLoadingEvents = {
}
export type FlutterCupertinoListTileProps = {
  'show-chevron'?: string;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoListTileElement {
  showChevron?: string;
}
export type FlutterCupertinoListTileEvents = {
  click?: CustomEvent;
}
export type FlutterCupertinoListSectionProps = {
  'inset-grouped'?: string;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoListSectionElement {
  insetGrouped?: string;
}
export type FlutterCupertinoListSectionEvents = {
}
export type FlutterCupertinoInputProps = {
  'val'?: string;
  'placeholder'?: string;
  'type'?: string;
  'disabled'?: boolean;
  'autofocus': boolean;
  'clearable'?: boolean;
  'maxlength'?: number;
  'readonly'?: boolean;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoInputElement {
  val?: string;
  placeholder?: string;
  type?: string;
  disabled?: boolean;
  autofocus: boolean;
  clearable?: boolean;
  maxlength?: number;
  readonly?: boolean;
}
export type FlutterCupertinoInputEvents = {
  input?: CustomEvent<string>;
  submit?: CustomEvent<string>;
  focus?: CustomEvent;
  blur?: CustomEvent;
  clear?: CustomEvent;
}
export type FlutterCupertinoIconProps = {
  'type'?: string;
  'label'?: string;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoIconElement {
  type?: string;
  label?: string;
}
export type FlutterCupertinoIconEvents = {
}
export type FlutterCupertinoFormSectionProps = {
  'inset-grouped'?: string;
  'clip-behavior'?: string;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoFormSectionElement {
  insetGrouped?: string;
  clipBehavior?: string;
}
export type FlutterCupertinoFormSectionEvents = {
}
export type FlutterCupertinoFormRowProps = {
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoFormRowElement {
}
export type FlutterCupertinoFormRowEvents = {
}
export type FlutterCupertinoDatePickerProps = {
  'mode'?: string;
  'minimum-date'?: string;
  'maximum-date'?: string;
  'minute-interval'?: string;
  'value'?: string;
  'minimum-year'?: string;
  'maximum-year'?: string;
  'show-day-of-week'?: string;
  'date-order'?: string;
  'height'?: string;
  'use-24-h'?: boolean;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoDatePickerElement {
  mode?: string;
  minimumDate?: string;
  maximumDate?: string;
  minuteInterval?: string;
  value?: string;
  minimumYear?: string;
  maximumYear?: string;
  showDayOfWeek?: string;
  dateOrder?: string;
  height?: string;
  use24H?: boolean;
}
export type FlutterCupertinoDatePickerEvents = {
  change?: CustomEvent<string>;
}
export type FlutterCupertinoContextMenuProps = {
  'enable-haptic-feedback'?: boolean;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoContextMenuElement {
  enableHapticFeedback?: boolean;
}
export type FlutterCupertinoContextMenuEvents = {
  select?: CustomEvent<FlutterCupertinoContextMenuSelectDetail>;
}
export type FlutterCupertinoCheckboxProps = {
  'val'?: string;
  'disabled'?: boolean;
  'active-color'?: string;
  'check-color'?: string;
  'focus-color'?: string;
  'fill-color-selected'?: string;
  'fill-color-disabled'?: string;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoCheckboxElement {
  val?: string;
  disabled?: boolean;
  activeColor?: string;
  checkColor?: string;
  focusColor?: string;
  fillColorSelected?: string;
  fillColorDisabled?: string;
}
export type FlutterCupertinoCheckboxEvents = {
  change?: CustomEvent<boolean>;
}
export type FlutterCupertinoButtonProps = {
  'variant'?: string;
  'size'?: string;
  'disabled'?: boolean;
  'pressed-opacity'?: string;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoButtonElement {
  variant?: string;
  size?: string;
  disabled?: boolean;
  pressedOpacity?: string;
}
export type FlutterCupertinoButtonEvents = {
  click?: Event;
}
export type FlutterCupertinoAlertProps = {
  'title'?: string;
  'message'?: string;
  'cancel-text'?: string;
  'cancel-destructive'?: string;
  'cancel-default'?: string;
  'cancel-text-style'?: string;
  'confirm-text'?: string;
  'confirm-default'?: string;
  'confirm-destructive'?: string;
  'confirm-text-style'?: string;
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoAlertElement {
  title?: string;
  message?: string;
  cancelText?: string;
  cancelDestructive?: string;
  cancelDefault?: string;
  cancelTextStyle?: string;
  confirmText?: string;
  confirmDefault?: string;
  confirmDestructive?: string;
  confirmTextStyle?: string;
}
export type FlutterCupertinoAlertEvents = {
  cancel?: CustomEvent;
  confirm?: CustomEvent;
}
export type FlutterCupertinoActionSheetProps = {
  'id'?: string;
  'class'?: string;
  'style'?: string | Record<string, any>;
}
export interface FlutterCupertinoActionSheetElement {
}
export type FlutterCupertinoActionSheetEvents = {
  select?: CustomEvent<FlutterCupertinoActionSheetSelectDetail>;
}
declare module 'vue' {
  interface GlobalComponents {
    'FlutterCupertinoToast': DefineCustomElement<
      FlutterCupertinoToastProps,
      FlutterCupertinoToastEvents
    >
    'FlutterCupertinoTimerPicker': DefineCustomElement<
      FlutterCupertinoTimerPickerProps,
      FlutterCupertinoTimerPickerEvents
    >
    'FlutterCupertinoTextarea': DefineCustomElement<
      FlutterCupertinoTextareaProps,
      FlutterCupertinoTextareaEvents
    >
    'FlutterCupertinoTabBar': DefineCustomElement<
      FlutterCupertinoTabBarProps,
      FlutterCupertinoTabBarEvents
    >
    'FlutterCupertinoTab': DefineCustomElement<
      FlutterCupertinoTabProps,
      FlutterCupertinoTabEvents
    >
    'FlutterCupertinoSwitch': DefineCustomElement<
      FlutterCupertinoSwitchProps,
      FlutterCupertinoSwitchEvents
    >
    'FlutterCupertinoSlider': DefineCustomElement<
      FlutterCupertinoSliderProps,
      FlutterCupertinoSliderEvents
    >
    'FlutterCupertinoSegmentedTab': DefineCustomElement<
      FlutterCupertinoSegmentedTabProps,
      FlutterCupertinoSegmentedTabEvents
    >
    'FlutterCupertinoSearchInput': DefineCustomElement<
      FlutterCupertinoSearchInputProps,
      FlutterCupertinoSearchInputEvents
    >
    'FlutterCupertinoRadio': DefineCustomElement<
      FlutterCupertinoRadioProps,
      FlutterCupertinoRadioEvents
    >
    'FlutterCupertinoPicker': DefineCustomElement<
      FlutterCupertinoPickerProps,
      FlutterCupertinoPickerEvents
    >
    'FlutterCupertinoPickerItem': DefineCustomElement<
      FlutterCupertinoPickerItemProps,
      FlutterCupertinoPickerItemEvents
    >
    'FlutterCupertinoModalPopup': DefineCustomElement<
      FlutterCupertinoModalPopupProps,
      FlutterCupertinoModalPopupEvents
    >
    'FlutterCupertinoLoading': DefineCustomElement<
      FlutterCupertinoLoadingProps,
      FlutterCupertinoLoadingEvents
    >
    'FlutterCupertinoListTile': DefineCustomElement<
      FlutterCupertinoListTileProps,
      FlutterCupertinoListTileEvents
    >
    'FlutterCupertinoListSection': DefineCustomElement<
      FlutterCupertinoListSectionProps,
      FlutterCupertinoListSectionEvents
    >
    'FlutterCupertinoInput': DefineCustomElement<
      FlutterCupertinoInputProps,
      FlutterCupertinoInputEvents
    >
    'FlutterCupertinoIcon': DefineCustomElement<
      FlutterCupertinoIconProps,
      FlutterCupertinoIconEvents
    >
    'FlutterCupertinoFormSection': DefineCustomElement<
      FlutterCupertinoFormSectionProps,
      FlutterCupertinoFormSectionEvents
    >
    'FlutterCupertinoFormRow': DefineCustomElement<
      FlutterCupertinoFormRowProps,
      FlutterCupertinoFormRowEvents
    >
    'FlutterCupertinoDatePicker': DefineCustomElement<
      FlutterCupertinoDatePickerProps,
      FlutterCupertinoDatePickerEvents
    >
    'FlutterCupertinoContextMenu': DefineCustomElement<
      FlutterCupertinoContextMenuProps,
      FlutterCupertinoContextMenuEvents
    >
    'FlutterCupertinoCheckbox': DefineCustomElement<
      FlutterCupertinoCheckboxProps,
      FlutterCupertinoCheckboxEvents
    >
    'FlutterCupertinoButton': DefineCustomElement<
      FlutterCupertinoButtonProps,
      FlutterCupertinoButtonEvents
    >
    'FlutterCupertinoAlert': DefineCustomElement<
      FlutterCupertinoAlertProps,
      FlutterCupertinoAlertEvents
    >
    'FlutterCupertinoActionSheet': DefineCustomElement<
      FlutterCupertinoActionSheetProps,
      FlutterCupertinoActionSheetEvents
    >
  }
}