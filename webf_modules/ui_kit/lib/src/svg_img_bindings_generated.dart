// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by webf codegen --flutter-package-src=../webf_modules/ui_kit --framework=react <distPath>
// ignore_for_file: avoid_unused_constructor_parameters
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: implementation_imports
// ignore_for_file: library_private_types_in_public_api
// ignore_for_file: prefer_void_to_null
import 'package:webf/webf.dart';
abstract class FlutterSVGImgBindings extends WidgetElement {
  FlutterSVGImgBindings(super.context);
  String get src;
  set src(value);
  String? get width;
  set width(value);
  String? get height;
  set height(value);
  double? get naturalWidth;
  set naturalWidth(value);
  double? get naturalHeight;
  set naturalHeight(value);
  bool get complete;
  set complete(value);
  @override
  void initializeAttributes(Map<String, ElementAttributeProperty> attributes) {
    super.initializeAttributes(attributes);
    attributes['src'] = ElementAttributeProperty(
      getter: () => src.toString(),
      setter: (value) => src = value,
      deleter: () => src = ''
    );
    attributes['width'] = ElementAttributeProperty(
      getter: () => width?.toString(),
      setter: (value) => width = value,
      deleter: () => width = null
    );
    attributes['height'] = ElementAttributeProperty(
      getter: () => height?.toString(),
      setter: (value) => height = value,
      deleter: () => height = null
    );
    attributes['natural-width'] = ElementAttributeProperty(
      getter: () => naturalWidth?.toString(),
      setter: (value) => naturalWidth = double.tryParse(value) ?? 0.0,
      deleter: () => naturalWidth = 0.0
    );
    attributes['natural-height'] = ElementAttributeProperty(
      getter: () => naturalHeight?.toString(),
      setter: (value) => naturalHeight = double.tryParse(value) ?? 0.0,
      deleter: () => naturalHeight = 0.0
    );
    attributes['complete'] = ElementAttributeProperty(
      getter: () => complete.toString(),
      setter: (value) => complete = value == 'true' || value == '',
      deleter: () => complete = false
    );
  }
  static StaticDefinedBindingPropertyMap flutterSvgImgProperties = {
    'src': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterSVGImgBindings>(element).src,
      setter: (element, value) =>
      castToType<FlutterSVGImgBindings>(element).src = value,
    ),
    'width': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterSVGImgBindings>(element).width,
      setter: (element, value) =>
      castToType<FlutterSVGImgBindings>(element).width = value,
    ),
    'height': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterSVGImgBindings>(element).height,
      setter: (element, value) =>
      castToType<FlutterSVGImgBindings>(element).height = value,
    ),
    'naturalWidth': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterSVGImgBindings>(element).naturalWidth,
      setter: (element, value) =>
      castToType<FlutterSVGImgBindings>(element).naturalWidth = value,
    ),
    'naturalHeight': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterSVGImgBindings>(element).naturalHeight,
      setter: (element, value) =>
      castToType<FlutterSVGImgBindings>(element).naturalHeight = value,
    ),
    'complete': StaticDefinedBindingProperty(
      getter: (element) => castToType<FlutterSVGImgBindings>(element).complete,
      setter: (element, value) =>
      castToType<FlutterSVGImgBindings>(element).complete = value,
    ),
  };
  @override
  List<StaticDefinedBindingPropertyMap> get properties => [
    ...super.properties,
    flutterSvgImgProperties,
  ];
}